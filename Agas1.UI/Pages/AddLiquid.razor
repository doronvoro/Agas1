@page "/add-liquid"
@using Agas1.Logic.Models
@using Agas1.Logic.Services
 
 

@inject DistilleryService Service

@code {
    private int selectedTankId;
    private int selectedLiquidTypeId;
    private List<LiquidType> liquidTypes = new List<LiquidType>();
    private List<Tank> tanks = new List<Tank>();  // Store the list of tanks

    private double volume;
    private string message;

    protected override async Task OnInitializedAsync()
    {
        liquidTypes = await Service.GetLiquidTypesAsync();
        tanks = await Service.GetAllTanksAsync();  // Fetch all tanks once

    }

    private async Task AddLiquidToTank()
    {
        await Service.FillTankFromExternalResource(selectedTankId, selectedLiquidTypeId, volume);
        volume = 0;  // Reset the form
        message = "Liquid added successfully!";
    }
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <h3>Add Liquid to Tank</h3>

            <div class="form-group">
                <label>Tank: </label>
                <TankDropdown Tanks="tanks" SelectedTankId="selectedTankId" SelectedTankIdChanged="@(id => selectedTankId = id)" />
            </div>

            <div class="form-group">
                <label>Liquid Type: </label>
                <select @bind="selectedLiquidTypeId" class="form-select">
                    @foreach (var type in liquidTypes)
                    {
                        <option value="@type.Id">@type.Name</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label>Volume: </label>
                <input type="number" @bind="volume" class="form-control" />
            </div>

            <button @onclick="AddLiquidToTank" class="btn btn-primary mt-3">Add Liquid</button>

            @if (!string.IsNullOrEmpty(message))
            {
                <div class="alert alert-success mt-3">@message</div>
            }
        </div>
    </div>
</div>

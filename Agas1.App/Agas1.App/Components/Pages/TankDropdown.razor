@using Agas1.Logic.Models
@using Agas1.Logic.Services
@rendermode InteractiveServer

@inject DistilleryService Service

@code {
    [Parameter] public Tank? SelectedTank { get; set; }
    [Parameter] public EventCallback<Tank> SelectedTankChanged { get; set; }  // Event callback for when the tank is selected
    private List<Tank> visibleTanks = new List<Tank>();

    protected override async Task OnInitializedAsync() => visibleTanks = await Service.GetVisibleTanksAsync();

    private async Task OnSelectedTankChanged(ChangeEventArgs e)
    {
        
        int.TryParse(e.Value.ToString(), out var selectedTankId);

        SelectedTank = visibleTanks.FirstOrDefault(f => f.Id == selectedTankId);
        
        await SelectedTankChanged.InvokeAsync(SelectedTank);  
    }

    protected override void OnParametersSet()
    {
    }
}

<select class="form-select" @onchange="OnSelectedTankChanged">
    <!-- Default option with value 0 -->
    <option selected value="0">-- Select a Tank --</option>


    @foreach (var tank in visibleTanks)
    {
        <option value="@tank.Id">@($"{tank.Name} ({tank.Volume} liters) {DateTime.Now.ToLongTimeString()}")</option>
    }
</select>

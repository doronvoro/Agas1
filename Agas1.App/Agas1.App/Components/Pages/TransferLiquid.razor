@page "/transfer-liquid"
@using Agas1.Logic.Models
@using Agas1.Logic.Services
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]
@rendermode InteractiveServer

@inject DistilleryService Service

@code {
    // private int fromTankId;
    // private int toTankId;

    private Tank fromTank;
    private Tank toTank;

    private double volume;
    private string message;
  //  private List<Tank> tanks = new List<Tank>();  // Store the list of tanks

    protected override async Task OnInitializedAsync()
    {
        //tanks = await Service.GetAllTanksAsync();  // Fetch all tanks once
    }

    private async Task TransferLiquidOnClick()
    {
        if (fromTank.Id == 0 || toTank.Id == 0)  // Ensure the user has selected a valid tank
        {
            message = "Please select a valid tank.";
            return;
        }

        if (fromTank.Id == toTank.Id )  // Ensure the user has selected a valid tank
        {
            message = "'Tank from' and 'tank to' must be different.";
            return;
        }
        if (volume <= 0)
        {
            message = "Please select a valid volume.";
            return;
        }
        if ((fromTank.Volume - volume) < 0 )   
        {
            message = "Please select a valid volume. After the transfer of liquid, the tank has a negative volume";
            return;
        }


        await Service.TransferLiquidBetweenTanks(fromTank.Id, toTank.Id, volume);
        volume = 0;  // Reset the form
        message = "Liquid transferred successfully!";
    }
}

<h3>Transfer Liquid Between Tanks</h3>

<label>From Tank: </label>

<TankDropdown SelectedTank="@fromTank" SelectedTankChanged="@(tank => fromTank = tank)" />
<br />
<label>To Tank: </label>
<TankDropdown SelectedTank="@toTank" SelectedTankChanged="@(tank => toTank = tank)" />
<br />

<label>Volume: </label>
<input type="number" @bind="volume" class="form-control" />
<br />

<button @onclick="TransferLiquidOnClick" class="btn btn-primary">Transfer Liquid</button>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-success mt-3">@message</div>
}
